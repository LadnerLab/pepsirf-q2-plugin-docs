name: Check Dependencies for New Release
on:
  pull_request:
    branches: master

# cron job

jobs:
  check-qiime:
    runs-on: ubuntu-latest

    steps:
      # setup python
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      # checkout main branch
      - uses: actions/checkout@v4
        with:
          path: main
      
      - name: Check qiime2 cache
        id: cache-qiime-restore
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/qiime-env
          key: ${{ runner.os }}-qiime2

      - name: Install qiime2 core distro
        if: ${{ steps.cache-qiime-restore.outputs.cache-hit != 'true' }}
        continue-on-error: true
        working-directory: ${{ github.workspace }}/main
        shell: bash -l {0}
        run: |
          env_file=qiime2-2023.7-py38-linux-conda.yml
          conda env create -q -p ./qiime-env --file $env_file

      - name: Install Sphinx requirements
        if: ${{ steps.cache-qiime-restore.outputs.cache-hit != 'true' }}
        continue-on-error: true
        working-directory: ${{ github.workspace }}/main/source
        shell: bash -l {0}
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate ../qiime-env
          pip install -r ../requirements.txt

  check-pepsirf:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          repository: LadnerLab/PepSIRF
          ref: master
          path: pepsirf
      - uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: 3.16.3

      - name: Check pepsirf cache
        id: cache-pepsirf-restore
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/pepsirf/build/
          key: ${{ runner.os }}-pepsirf

      - if: ${{ steps.cache-pepsirf-restore.outputs.cache-hit != 'true' }}
        name: Install pepsirf
        working-directory: ${{ github.workspace }}/pepsirf
        shell: bash -l {0}
        run: |
          sudo apt update
          sudo apt install zlib1g
          sudo apt install -y libboost-all-dev
          mkdir build
          cd build
          cmake --version
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make pepsirf
